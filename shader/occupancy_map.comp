#version 430 
layout(local_size_x=1,local_size_y=1,local_size_z=1)in;
layout(binding=0,rgba8)uniform image3D occupancy_map;
uniform sampler1D transfer_function;
uniform sampler3D volume;
const float OCCUPIED=0.0;
const float EMPTY=1.0;
//raw=(256, 256, 225)
//block_Size=(4,4,4)
//glbalInvocation=(64,64,56)
//localInvocation=(8,8,8)
//numsoflocalworkgroups=(8,8,7)
//occupancy_map=(64,64,56)
void main(){
	
	vec3 block_size=vec3(4,4,4);//?
	  const ivec3 dimDst = ivec3(64,64,56);
	//const ivec3 dimDst=imageSize(occupancy_map);
	if(any(greaterThanEqual(gl_GlobalInvocationID,dimDst)))return;
	//const ivec3 dimSrc=imageSize(volume);
	  const ivec3 dimSrc = ivec3(256,256,225);

	const ivec3 start=ivec3(gl_GlobalInvocationID*block_size.xyz);
	ivec3 end=ivec3(min(dimSrc,start+block_size.xyz));
	end.x=(dimSrc.x-end.x)<block_size.x?dimSrc.x:end.x;
	end.y=(dimSrc.y-end.y)<block_size.y?dimSrc.y:end.y;
	end.z=(dimSrc.z-end.z)<block_size.z?dimSrc.z:end.z;

	ivec3 pos;
	for(pos.z=start.z;pos.z<end.z;pos.z++)
		for(pos.y=start.y;pos.y<end.y;pos.y++)
			for(pos.x=start.x;pos.x<end.x;pos.x++)
			{
			 float intensity=texture(volume,pos/vec3(256,256,225)).x;
			//?
			float alpha=texture(transfer_function,intensity).a;//?
			if(alpha>0.0f){
				imageStore(occupancy_map,ivec3(gl_GlobalInvocationID),vec4(OCCUPIED));
				return;
			}
			}
		
		
	imageStore(occupancy_map,ivec3(gl_GlobalInvocationID),vec4(EMPTY));
}
